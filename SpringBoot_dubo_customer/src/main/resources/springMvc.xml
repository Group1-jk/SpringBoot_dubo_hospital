<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
 
     <!-- 注解扫描包 控制层 
                              配置注解扫描 并且只扫描控制层
     -->
	<!--      <context:component-scan base-package="com.jk.controller" /> -->
     <context:component-scan base-package="com.jk.controller.*">
	    <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
     <!-- 开启注解 
                              开启springMVC的注解驱动
     -->
     <mvc:annotation-driven />
 
 
 
 
 
     <!--
         配置静态资源，直接映射到对应的文件夹，不被DispatcherServlet处理，3.04新增功能，需要重新设置spring-mvc-3.0.xsd
    
     <mvc:resources mapping="/img/**" location="/img/" />
     <mvc:resources mapping="/js/**" location="/js/" />
     <mvc:resources mapping="/css/**" location="/css/" />
     <mvc:resources mapping="/html/**" location="/html/" />
 
  -->
 
     <!-- 
                                配置spring中的视图解析器 能够让springmvc像struts2一样跳转页面
                                定义跳转的文件的前后缀 ，视图模式配置-->
     <!-- 这里的配置我的理解是自动给后面action的方法return的字符串加上前缀和后缀，变成一个 可用的url地址 -->
      <bean id="viewResolver"
         class="org.springframework.web.servlet.view.InternalResourceViewResolver">
         <!--prefix 前缀  
             suffix 后缀
                                       通过配置路径的前缀和后缀然后再和springMVC控制层返回的字符串 拼接成完整的路径进行跳转
                                        假设controller方法return "test"字符串 则拼接后的路径为
             /WEB-INF/view/test.jsp
         -->
         <property name="prefix" value="/WEB-INF/view"/>
         <property name="suffix" value=".jsp" />
     </bean> 

     
<!--      配置一个拦截器集合  -->
  <!--  <mvc:interceptors>  
     	<mvc:interceptor>
     	 <mvc:mapping path="/**" />
     	 <mvc:exclude-mapping path="/user/userLogin.do" />
     	 <bean class="com.jk.login.interceptor.LoginInterceptor"/>  
     	</mvc:interceptor>
		 使用bean定义一个Interceptor，直接定义在mvc:interceptors根标签下面的Interceptor将拦截所有的请求 
		 只要是springMVC的访问请求 都会被拦截到 
    </mvc:interceptors> -->

       <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
<!--           上传大小单位为b    -->
         <property name="defaultEncoding"><value>UTF-8</value></property>
          	<property name="maxUploadSize" value="10485760000" />  
			<property name="maxInMemorySize" value="40960" />   
   </bean>
   <!-- 配置AOP -->
    <aop:aspectj-autoproxy />
 </beans>